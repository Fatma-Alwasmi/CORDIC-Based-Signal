// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_fpga417_cordic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cos,
        sin,
        m_axi_bundle5_AWVALID,
        m_axi_bundle5_AWREADY,
        m_axi_bundle5_AWADDR,
        m_axi_bundle5_AWID,
        m_axi_bundle5_AWLEN,
        m_axi_bundle5_AWSIZE,
        m_axi_bundle5_AWBURST,
        m_axi_bundle5_AWLOCK,
        m_axi_bundle5_AWCACHE,
        m_axi_bundle5_AWPROT,
        m_axi_bundle5_AWQOS,
        m_axi_bundle5_AWREGION,
        m_axi_bundle5_AWUSER,
        m_axi_bundle5_WVALID,
        m_axi_bundle5_WREADY,
        m_axi_bundle5_WDATA,
        m_axi_bundle5_WSTRB,
        m_axi_bundle5_WLAST,
        m_axi_bundle5_WID,
        m_axi_bundle5_WUSER,
        m_axi_bundle5_ARVALID,
        m_axi_bundle5_ARREADY,
        m_axi_bundle5_ARADDR,
        m_axi_bundle5_ARID,
        m_axi_bundle5_ARLEN,
        m_axi_bundle5_ARSIZE,
        m_axi_bundle5_ARBURST,
        m_axi_bundle5_ARLOCK,
        m_axi_bundle5_ARCACHE,
        m_axi_bundle5_ARPROT,
        m_axi_bundle5_ARQOS,
        m_axi_bundle5_ARREGION,
        m_axi_bundle5_ARUSER,
        m_axi_bundle5_RVALID,
        m_axi_bundle5_RREADY,
        m_axi_bundle5_RDATA,
        m_axi_bundle5_RLAST,
        m_axi_bundle5_RID,
        m_axi_bundle5_RFIFONUM,
        m_axi_bundle5_RUSER,
        m_axi_bundle5_RRESP,
        m_axi_bundle5_BVALID,
        m_axi_bundle5_BREADY,
        m_axi_bundle5_BRESP,
        m_axi_bundle5_BID,
        m_axi_bundle5_BUSER,
        mag,
        m_axi_bundle6_AWVALID,
        m_axi_bundle6_AWREADY,
        m_axi_bundle6_AWADDR,
        m_axi_bundle6_AWID,
        m_axi_bundle6_AWLEN,
        m_axi_bundle6_AWSIZE,
        m_axi_bundle6_AWBURST,
        m_axi_bundle6_AWLOCK,
        m_axi_bundle6_AWCACHE,
        m_axi_bundle6_AWPROT,
        m_axi_bundle6_AWQOS,
        m_axi_bundle6_AWREGION,
        m_axi_bundle6_AWUSER,
        m_axi_bundle6_WVALID,
        m_axi_bundle6_WREADY,
        m_axi_bundle6_WDATA,
        m_axi_bundle6_WSTRB,
        m_axi_bundle6_WLAST,
        m_axi_bundle6_WID,
        m_axi_bundle6_WUSER,
        m_axi_bundle6_ARVALID,
        m_axi_bundle6_ARREADY,
        m_axi_bundle6_ARADDR,
        m_axi_bundle6_ARID,
        m_axi_bundle6_ARLEN,
        m_axi_bundle6_ARSIZE,
        m_axi_bundle6_ARBURST,
        m_axi_bundle6_ARLOCK,
        m_axi_bundle6_ARCACHE,
        m_axi_bundle6_ARPROT,
        m_axi_bundle6_ARQOS,
        m_axi_bundle6_ARREGION,
        m_axi_bundle6_ARUSER,
        m_axi_bundle6_RVALID,
        m_axi_bundle6_RREADY,
        m_axi_bundle6_RDATA,
        m_axi_bundle6_RLAST,
        m_axi_bundle6_RID,
        m_axi_bundle6_RFIFONUM,
        m_axi_bundle6_RUSER,
        m_axi_bundle6_RRESP,
        m_axi_bundle6_BVALID,
        m_axi_bundle6_BREADY,
        m_axi_bundle6_BRESP,
        m_axi_bundle6_BID,
        m_axi_bundle6_BUSER,
        theta
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [16:0] cos;
input  [16:0] sin;
output   m_axi_bundle5_AWVALID;
input   m_axi_bundle5_AWREADY;
output  [63:0] m_axi_bundle5_AWADDR;
output  [0:0] m_axi_bundle5_AWID;
output  [31:0] m_axi_bundle5_AWLEN;
output  [2:0] m_axi_bundle5_AWSIZE;
output  [1:0] m_axi_bundle5_AWBURST;
output  [1:0] m_axi_bundle5_AWLOCK;
output  [3:0] m_axi_bundle5_AWCACHE;
output  [2:0] m_axi_bundle5_AWPROT;
output  [3:0] m_axi_bundle5_AWQOS;
output  [3:0] m_axi_bundle5_AWREGION;
output  [0:0] m_axi_bundle5_AWUSER;
output   m_axi_bundle5_WVALID;
input   m_axi_bundle5_WREADY;
output  [31:0] m_axi_bundle5_WDATA;
output  [3:0] m_axi_bundle5_WSTRB;
output   m_axi_bundle5_WLAST;
output  [0:0] m_axi_bundle5_WID;
output  [0:0] m_axi_bundle5_WUSER;
output   m_axi_bundle5_ARVALID;
input   m_axi_bundle5_ARREADY;
output  [63:0] m_axi_bundle5_ARADDR;
output  [0:0] m_axi_bundle5_ARID;
output  [31:0] m_axi_bundle5_ARLEN;
output  [2:0] m_axi_bundle5_ARSIZE;
output  [1:0] m_axi_bundle5_ARBURST;
output  [1:0] m_axi_bundle5_ARLOCK;
output  [3:0] m_axi_bundle5_ARCACHE;
output  [2:0] m_axi_bundle5_ARPROT;
output  [3:0] m_axi_bundle5_ARQOS;
output  [3:0] m_axi_bundle5_ARREGION;
output  [0:0] m_axi_bundle5_ARUSER;
input   m_axi_bundle5_RVALID;
output   m_axi_bundle5_RREADY;
input  [31:0] m_axi_bundle5_RDATA;
input   m_axi_bundle5_RLAST;
input  [0:0] m_axi_bundle5_RID;
input  [8:0] m_axi_bundle5_RFIFONUM;
input  [0:0] m_axi_bundle5_RUSER;
input  [1:0] m_axi_bundle5_RRESP;
input   m_axi_bundle5_BVALID;
output   m_axi_bundle5_BREADY;
input  [1:0] m_axi_bundle5_BRESP;
input  [0:0] m_axi_bundle5_BID;
input  [0:0] m_axi_bundle5_BUSER;
input  [63:0] mag;
output   m_axi_bundle6_AWVALID;
input   m_axi_bundle6_AWREADY;
output  [63:0] m_axi_bundle6_AWADDR;
output  [0:0] m_axi_bundle6_AWID;
output  [31:0] m_axi_bundle6_AWLEN;
output  [2:0] m_axi_bundle6_AWSIZE;
output  [1:0] m_axi_bundle6_AWBURST;
output  [1:0] m_axi_bundle6_AWLOCK;
output  [3:0] m_axi_bundle6_AWCACHE;
output  [2:0] m_axi_bundle6_AWPROT;
output  [3:0] m_axi_bundle6_AWQOS;
output  [3:0] m_axi_bundle6_AWREGION;
output  [0:0] m_axi_bundle6_AWUSER;
output   m_axi_bundle6_WVALID;
input   m_axi_bundle6_WREADY;
output  [31:0] m_axi_bundle6_WDATA;
output  [3:0] m_axi_bundle6_WSTRB;
output   m_axi_bundle6_WLAST;
output  [0:0] m_axi_bundle6_WID;
output  [0:0] m_axi_bundle6_WUSER;
output   m_axi_bundle6_ARVALID;
input   m_axi_bundle6_ARREADY;
output  [63:0] m_axi_bundle6_ARADDR;
output  [0:0] m_axi_bundle6_ARID;
output  [31:0] m_axi_bundle6_ARLEN;
output  [2:0] m_axi_bundle6_ARSIZE;
output  [1:0] m_axi_bundle6_ARBURST;
output  [1:0] m_axi_bundle6_ARLOCK;
output  [3:0] m_axi_bundle6_ARCACHE;
output  [2:0] m_axi_bundle6_ARPROT;
output  [3:0] m_axi_bundle6_ARQOS;
output  [3:0] m_axi_bundle6_ARREGION;
output  [0:0] m_axi_bundle6_ARUSER;
input   m_axi_bundle6_RVALID;
output   m_axi_bundle6_RREADY;
input  [31:0] m_axi_bundle6_RDATA;
input   m_axi_bundle6_RLAST;
input  [0:0] m_axi_bundle6_RID;
input  [8:0] m_axi_bundle6_RFIFONUM;
input  [0:0] m_axi_bundle6_RUSER;
input  [1:0] m_axi_bundle6_RRESP;
input   m_axi_bundle6_BVALID;
output   m_axi_bundle6_BREADY;
input  [1:0] m_axi_bundle6_BRESP;
input  [0:0] m_axi_bundle6_BID;
input  [0:0] m_axi_bundle6_BUSER;
input  [63:0] theta;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_bundle5_AWVALID;
reg m_axi_bundle5_WVALID;
reg m_axi_bundle5_BREADY;
reg m_axi_bundle6_AWVALID;
reg m_axi_bundle6_WVALID;
reg m_axi_bundle6_BREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bundle5_blk_n_AW;
wire    ap_CS_fsm_state10;
reg    bundle5_blk_n_W;
wire    ap_CS_fsm_state11;
reg    bundle5_blk_n_B;
wire    ap_CS_fsm_state16;
reg    bundle6_blk_n_AW;
reg    bundle6_blk_n_W;
reg    bundle6_blk_n_B;
wire   [0:0] and_ln76_fu_308_p2;
reg   [0:0] and_ln76_reg_1112;
wire   [0:0] and_ln69_1_fu_326_p2;
reg   [0:0] and_ln69_1_reg_1117;
wire   [0:0] or_ln69_fu_332_p2;
reg   [0:0] or_ln69_reg_1122;
wire   [19:0] current_cos_V_fu_354_p3;
reg   [19:0] current_cos_V_reg_1127;
wire   [19:0] current_sin_V_fu_387_p3;
reg   [19:0] current_sin_V_reg_1132;
wire    ap_CS_fsm_state3;
wire   [26:0] trunc_ln1270_fu_427_p1;
reg   [26:0] trunc_ln1270_reg_1142;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln1090_fu_430_p2;
reg   [0:0] icmp_ln1090_reg_1148;
reg   [0:0] p_Result_14_reg_1153;
wire   [0:0] icmp_ln1090_1_fu_466_p2;
reg   [0:0] icmp_ln1090_1_reg_1159;
wire   [0:0] p_Result_17_fu_472_p3;
reg   [0:0] p_Result_17_reg_1164;
wire   [19:0] tmp_V_5_fu_486_p3;
reg   [19:0] tmp_V_5_reg_1169;
wire   [39:0] zext_ln1092_fu_505_p1;
reg   [39:0] zext_ln1092_reg_1175;
wire    ap_CS_fsm_state7;
wire   [31:0] sub_ln1099_fu_543_p2;
reg   [31:0] sub_ln1099_reg_1183;
wire   [5:0] trunc_ln1102_fu_549_p1;
reg   [5:0] trunc_ln1102_reg_1190;
wire   [7:0] trunc_ln1098_fu_553_p1;
reg   [7:0] trunc_ln1098_reg_1195;
wire   [20:0] zext_ln1092_1_fu_557_p1;
reg   [20:0] zext_ln1092_1_reg_1200;
wire   [31:0] sub_ln1099_1_fu_590_p2;
reg   [31:0] sub_ln1099_1_reg_1205;
wire   [20:0] trunc_ln1099_fu_596_p1;
reg   [20:0] trunc_ln1099_reg_1212;
wire   [0:0] icmp_ln1102_1_fu_626_p2;
reg   [0:0] icmp_ln1102_1_reg_1217;
wire   [7:0] trunc_ln1098_1_fu_632_p1;
reg   [7:0] trunc_ln1098_1_reg_1222;
wire   [1:0] or_ln_fu_722_p3;
reg   [1:0] or_ln_reg_1227;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln1109_fu_730_p2;
reg   [0:0] icmp_ln1109_reg_1232;
wire   [1:0] or_ln1104_1_fu_800_p3;
reg   [1:0] or_ln1104_1_reg_1237;
wire   [0:0] icmp_ln1113_fu_808_p2;
reg   [0:0] icmp_ln1113_reg_1242;
reg   [39:0] m_9_reg_1247;
wire    ap_CS_fsm_state9;
reg   [0:0] p_Result_5_reg_1252;
reg   [62:0] m_8_reg_1257;
reg   [0:0] p_Result_12_reg_1262;
wire   [31:0] select_ln1090_fu_991_p3;
reg   [31:0] select_ln1090_reg_1267;
wire   [31:0] select_ln1090_1_fu_1063_p3;
reg   [31:0] select_ln1090_1_reg_1278;
wire    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start;
wire    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_done;
wire    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_idle;
wire    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_ready;
wire  signed [19:0] grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_r_V_out;
wire    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_r_V_out_ap_vld;
wire   [19:0] grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_lhs_out;
wire    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_lhs_out_ap_vld;
reg    grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start_reg;
wire    ap_CS_fsm_state2;
wire  signed [63:0] sext_ln115_fu_1008_p1;
wire  signed [63:0] sext_ln116_fu_1080_p1;
reg    ap_block_state10_io;
reg    ap_block_state16;
reg    ap_block_state11_io;
wire   [0:0] tmp_fu_248_p3;
wire   [0:0] icmp_ln1035_fu_256_p2;
wire   [11:0] empty_55_fu_244_p1;
wire   [16:0] and_ln69_fu_282_p2;
wire   [11:0] empty_fu_240_p1;
wire   [0:0] icmp_ln1035_1_fu_302_p2;
wire   [0:0] tmp_1_fu_274_p3;
wire   [0:0] and_ln63_1_fu_314_p2;
wire   [0:0] tmp_2_fu_288_p3;
wire   [0:0] xor_ln63_fu_320_p2;
wire   [0:0] and_ln63_fu_262_p2;
wire   [11:0] sub_ln64_fu_268_p2;
wire   [11:0] select_ln63_fu_338_p3;
wire   [11:0] select_ln69_2_fu_346_p3;
wire   [11:0] sub_ln71_fu_296_p2;
wire   [11:0] select_ln69_3_fu_363_p3;
wire   [11:0] select_ln69_4_fu_371_p3;
wire   [11:0] select_ln69_5_fu_379_p3;
wire   [11:0] select_ln69_fu_410_p3;
wire   [11:0] select_ln76_fu_403_p3;
wire  signed [28:0] grp_fu_1091_p2;
wire  signed [19:0] sext_ln813_fu_442_p0;
wire  signed [11:0] theta_rotated_V_fu_417_p3;
wire  signed [20:0] sext_ln813_fu_442_p1;
wire  signed [20:0] sext_ln813_1_fu_446_p1;
wire  signed [19:0] add_ln1347_1_fu_460_p0;
wire  signed [19:0] sext_ln1347_fu_450_p1;
wire   [20:0] ret_V_fu_454_p2;
wire   [19:0] add_ln1347_1_fu_460_p2;
wire   [19:0] tmp_V_2_fu_480_p2;
wire   [26:0] tmp_V_fu_494_p2;
wire   [26:0] tmp_V_4_fu_499_p3;
reg   [39:0] p_Result_s_fu_509_p4;
wire   [40:0] p_Result_15_fu_519_p3;
wire  signed [63:0] sext_ln1204_fu_527_p1;
reg   [63:0] tmp_4_fu_531_p3;
wire   [31:0] l_fu_539_p1;
reg   [20:0] p_Result_8_fu_560_p4;
wire   [21:0] p_Result_18_fu_570_p3;
wire  signed [31:0] sext_ln1198_fu_578_p1;
reg   [31:0] l_1_fu_582_p3;
wire   [4:0] trunc_ln1102_1_fu_600_p1;
wire   [4:0] sub_ln1102_1_fu_604_p2;
wire   [20:0] zext_ln1102_1_fu_610_p1;
wire   [20:0] lshr_ln1102_1_fu_614_p2;
wire   [20:0] p_Result_10_fu_620_p2;
wire   [31:0] lsb_index_fu_636_p2;
wire   [30:0] tmp_7_fu_641_p4;
wire   [5:0] sub_ln1102_fu_657_p2;
wire   [39:0] zext_ln1102_fu_662_p1;
wire   [39:0] lshr_ln1102_fu_666_p2;
wire   [39:0] p_Result_4_fu_672_p2;
wire   [0:0] icmp_ln1101_fu_651_p2;
wire   [0:0] icmp_ln1102_fu_677_p2;
wire   [0:0] tmp_8_fu_689_p3;
wire   [0:0] p_Result_3_fu_703_p3;
wire   [0:0] xor_ln1104_fu_697_p2;
wire   [0:0] and_ln1104_fu_710_p2;
wire   [0:0] a_fu_683_p2;
wire   [0:0] or_ln1104_2_fu_716_p2;
wire   [31:0] lsb_index_1_fu_736_p2;
wire   [30:0] tmp_11_fu_741_p4;
wire   [0:0] icmp_ln1101_1_fu_751_p2;
wire   [0:0] tmp_12_fu_762_p3;
wire   [20:0] add_ln1104_fu_776_p2;
wire   [0:0] p_Result_11_fu_781_p3;
wire   [0:0] xor_ln1104_1_fu_770_p2;
wire   [0:0] and_ln1104_1_fu_788_p2;
wire   [0:0] a_1_fu_757_p2;
wire   [0:0] or_ln1104_fu_794_p2;
wire   [31:0] add_ln1109_fu_814_p2;
wire   [39:0] zext_ln1109_fu_819_p1;
wire   [31:0] sub_ln1110_fu_828_p2;
wire   [39:0] zext_ln1110_fu_833_p1;
wire   [39:0] lshr_ln1109_fu_823_p2;
wire   [39:0] shl_ln1110_fu_837_p2;
wire   [39:0] m_fu_842_p3;
wire   [40:0] zext_ln1106_fu_849_p1;
wire   [40:0] zext_ln1116_fu_853_p1;
wire   [40:0] m_1_fu_856_p2;
wire   [31:0] add_ln1113_fu_883_p2;
wire   [63:0] zext_ln1112_fu_880_p1;
wire   [63:0] zext_ln1113_fu_888_p1;
wire   [31:0] sub_ln1114_fu_898_p2;
wire   [63:0] zext_ln1114_fu_903_p1;
wire   [63:0] lshr_ln1113_fu_892_p2;
wire   [63:0] shl_ln1114_fu_907_p2;
wire   [63:0] m_4_fu_913_p3;
wire   [63:0] zext_ln1116_1_fu_920_p1;
wire   [63:0] m_5_fu_923_p2;
wire   [7:0] sub_ln1119_fu_957_p2;
wire   [7:0] select_ln1098_fu_950_p3;
wire   [7:0] add_ln1124_fu_962_p2;
wire   [63:0] zext_ln1106_1_fu_947_p1;
wire   [8:0] tmp_3_fu_968_p3;
wire   [63:0] p_Result_16_fu_975_p5;
wire   [31:0] LD_fu_987_p1;
wire   [61:0] trunc_ln5_fu_998_p4;
wire   [7:0] sub_ln1119_1_fu_1029_p2;
wire   [7:0] select_ln1098_1_fu_1022_p3;
wire   [7:0] add_ln1124_1_fu_1034_p2;
wire   [63:0] zext_ln1117_fu_1019_p1;
wire   [8:0] tmp_6_fu_1040_p3;
wire   [63:0] p_Result_19_fu_1047_p5;
wire   [31:0] LD_1_fu_1059_p1;
wire   [61:0] trunc_ln7_fu_1070_p4;
wire   [7:0] grp_fu_1091_p1;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start_reg = 1'b0;
end

top_fpga417_cordic_Pipeline_VITIS_LOOP_93_1 grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start),
    .ap_done(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_done),
    .ap_idle(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_idle),
    .ap_ready(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_ready),
    .current_sin_V(current_sin_V_reg_1132),
    .current_cos_V(current_cos_V_reg_1127),
    .r_V_out(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_r_V_out),
    .r_V_out_ap_vld(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_r_V_out_ap_vld),
    .lhs_out(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_lhs_out),
    .lhs_out_ap_vld(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_lhs_out_ap_vld)
);

top_fpga417_mul_mul_20s_8ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 29 ))
mul_mul_20s_8ns_29_4_1_U336(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_r_V_out),
    .din1(grp_fu_1091_p1),
    .ce(1'b1),
    .dout(grp_fu_1091_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start_reg <= 1'b1;
        end else if ((grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_ready == 1'b1)) begin
            grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        and_ln69_1_reg_1117 <= and_ln69_1_fu_326_p2;
        and_ln76_reg_1112 <= and_ln76_fu_308_p2;
        current_cos_V_reg_1127[19 : 8] <= current_cos_V_fu_354_p3[19 : 8];
        current_sin_V_reg_1132[19 : 8] <= current_sin_V_fu_387_p3[19 : 8];
        or_ln69_reg_1122 <= or_ln69_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln1090_1_reg_1159 <= icmp_ln1090_1_fu_466_p2;
        icmp_ln1090_reg_1148 <= icmp_ln1090_fu_430_p2;
        p_Result_14_reg_1153 <= grp_fu_1091_p2[32'd28];
        p_Result_17_reg_1164 <= ret_V_fu_454_p2[32'd20];
        tmp_V_5_reg_1169 <= tmp_V_5_fu_486_p3;
        trunc_ln1270_reg_1142 <= trunc_ln1270_fu_427_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1090_1_reg_1159 == 1'd0))) begin
        icmp_ln1102_1_reg_1217 <= icmp_ln1102_1_fu_626_p2;
        sub_ln1099_1_reg_1205 <= sub_ln1099_1_fu_590_p2;
        trunc_ln1098_1_reg_1222 <= trunc_ln1098_1_fu_632_p1;
        trunc_ln1099_reg_1212 <= trunc_ln1099_fu_596_p1;
        zext_ln1092_1_reg_1200[19 : 0] <= zext_ln1092_1_fu_557_p1[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1090_reg_1148 == 1'd0))) begin
        icmp_ln1109_reg_1232 <= icmp_ln1109_fu_730_p2;
        or_ln_reg_1227[0] <= or_ln_fu_722_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1090_1_reg_1159 == 1'd0))) begin
        icmp_ln1113_reg_1242 <= icmp_ln1113_fu_808_p2;
        or_ln1104_1_reg_1237[0] <= or_ln1104_1_fu_800_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln1090_1_reg_1159 == 1'd0))) begin
        m_8_reg_1257 <= {{m_5_fu_923_p2[63:1]}};
        p_Result_12_reg_1262 <= m_5_fu_923_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln1090_reg_1148 == 1'd0))) begin
        m_9_reg_1247 <= {{m_1_fu_856_p2[40:1]}};
        p_Result_5_reg_1252 <= m_1_fu_856_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        select_ln1090_1_reg_1278 <= select_ln1090_1_fu_1063_p3;
        select_ln1090_reg_1267 <= select_ln1090_fu_991_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1090_reg_1148 == 1'd0))) begin
        sub_ln1099_reg_1183 <= sub_ln1099_fu_543_p2;
        trunc_ln1098_reg_1195 <= trunc_ln1098_fu_553_p1;
        trunc_ln1102_reg_1190 <= trunc_ln1102_fu_549_p1;
        zext_ln1092_reg_1175[26 : 0] <= zext_ln1092_fu_505_p1[26 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state10_io)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state11_io)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if (((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0))) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((~((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bundle5_blk_n_AW = m_axi_bundle5_AWREADY;
    end else begin
        bundle5_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bundle5_blk_n_B = m_axi_bundle5_BVALID;
    end else begin
        bundle5_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bundle5_blk_n_W = m_axi_bundle5_WREADY;
    end else begin
        bundle5_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bundle6_blk_n_AW = m_axi_bundle6_AWREADY;
    end else begin
        bundle6_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bundle6_blk_n_B = m_axi_bundle6_BVALID;
    end else begin
        bundle6_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bundle6_blk_n_W = m_axi_bundle6_WREADY;
    end else begin
        bundle6_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_bundle5_AWVALID = 1'b1;
    end else begin
        m_axi_bundle5_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        m_axi_bundle5_BREADY = 1'b1;
    end else begin
        m_axi_bundle5_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_bundle5_WVALID = 1'b1;
    end else begin
        m_axi_bundle5_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_bundle6_AWVALID = 1'b1;
    end else begin
        m_axi_bundle6_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        m_axi_bundle6_BREADY = 1'b1;
    end else begin
        m_axi_bundle6_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_bundle6_WVALID = 1'b1;
    end else begin
        m_axi_bundle6_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if ((~((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_1059_p1 = p_Result_19_fu_1047_p5[31:0];

assign LD_fu_987_p1 = p_Result_16_fu_975_p5[31:0];

assign a_1_fu_757_p2 = (icmp_ln1102_1_reg_1217 & icmp_ln1101_1_fu_751_p2);

assign a_fu_683_p2 = (icmp_ln1102_fu_677_p2 & icmp_ln1101_fu_651_p2);

assign add_ln1104_fu_776_p2 = ($signed(trunc_ln1099_reg_1212) + $signed(21'd2097128));

assign add_ln1109_fu_814_p2 = ($signed(sub_ln1099_reg_1183) + $signed(32'd4294967271));

assign add_ln1113_fu_883_p2 = ($signed(sub_ln1099_1_reg_1205) + $signed(32'd4294967271));

assign add_ln1124_1_fu_1034_p2 = (sub_ln1119_1_fu_1029_p2 + select_ln1098_1_fu_1022_p3);

assign add_ln1124_fu_962_p2 = (sub_ln1119_fu_957_p2 + select_ln1098_fu_950_p3);

assign add_ln1347_1_fu_460_p0 = grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_lhs_out;

assign add_ln1347_1_fu_460_p2 = ($signed(add_ln1347_1_fu_460_p0) + $signed(sext_ln1347_fu_450_p1));

assign and_ln1104_1_fu_788_p2 = (xor_ln1104_1_fu_770_p2 & p_Result_11_fu_781_p3);

assign and_ln1104_fu_710_p2 = (xor_ln1104_fu_697_p2 & p_Result_3_fu_703_p3);

assign and_ln63_1_fu_314_p2 = (tmp_fu_248_p3 & icmp_ln1035_fu_256_p2);

assign and_ln63_fu_262_p2 = (tmp_fu_248_p3 & icmp_ln1035_fu_256_p2);

assign and_ln69_1_fu_326_p2 = (xor_ln63_fu_320_p2 & tmp_2_fu_288_p3);

assign and_ln69_fu_282_p2 = (sin & cos);

assign and_ln76_fu_308_p2 = (tmp_1_fu_274_p3 & icmp_ln1035_1_fu_302_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_io = ((m_axi_bundle6_AWREADY == 1'b0) | (m_axi_bundle5_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_bundle5_WREADY == 1'b0) | (m_axi_bundle6_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state16 = ((m_axi_bundle5_BVALID == 1'b0) | (m_axi_bundle6_BVALID == 1'b0));
end

assign current_cos_V_fu_354_p3 = {{select_ln69_2_fu_346_p3}, {8'd0}};

assign current_sin_V_fu_387_p3 = {{select_ln69_5_fu_379_p3}, {8'd0}};

assign empty_55_fu_244_p1 = cos[11:0];

assign empty_fu_240_p1 = sin[11:0];

assign grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start = grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_ap_start_reg;

assign grp_fu_1091_p1 = 29'd155;

assign icmp_ln1035_1_fu_302_p2 = (($signed(cos) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_256_p2 = (($signed(sin) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1090_1_fu_466_p2 = ((ret_V_fu_454_p2 == 21'd0) ? 1'b1 : 1'b0);

assign icmp_ln1090_fu_430_p2 = ((grp_fu_1091_p2 == 29'd0) ? 1'b1 : 1'b0);

assign icmp_ln1101_1_fu_751_p2 = (($signed(tmp_11_fu_741_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1101_fu_651_p2 = (($signed(tmp_7_fu_641_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1102_1_fu_626_p2 = ((p_Result_10_fu_620_p2 != 21'd0) ? 1'b1 : 1'b0);

assign icmp_ln1102_fu_677_p2 = ((p_Result_4_fu_672_p2 != 40'd0) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_730_p2 = (($signed(lsb_index_fu_636_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1113_fu_808_p2 = (($signed(lsb_index_1_fu_736_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (sext_ln1198_fu_578_p1) begin
    if (sext_ln1198_fu_578_p1[0] == 1'b1) begin
        l_1_fu_582_p3 = 32'd0;
    end else if (sext_ln1198_fu_578_p1[1] == 1'b1) begin
        l_1_fu_582_p3 = 32'd1;
    end else if (sext_ln1198_fu_578_p1[2] == 1'b1) begin
        l_1_fu_582_p3 = 32'd2;
    end else if (sext_ln1198_fu_578_p1[3] == 1'b1) begin
        l_1_fu_582_p3 = 32'd3;
    end else if (sext_ln1198_fu_578_p1[4] == 1'b1) begin
        l_1_fu_582_p3 = 32'd4;
    end else if (sext_ln1198_fu_578_p1[5] == 1'b1) begin
        l_1_fu_582_p3 = 32'd5;
    end else if (sext_ln1198_fu_578_p1[6] == 1'b1) begin
        l_1_fu_582_p3 = 32'd6;
    end else if (sext_ln1198_fu_578_p1[7] == 1'b1) begin
        l_1_fu_582_p3 = 32'd7;
    end else if (sext_ln1198_fu_578_p1[8] == 1'b1) begin
        l_1_fu_582_p3 = 32'd8;
    end else if (sext_ln1198_fu_578_p1[9] == 1'b1) begin
        l_1_fu_582_p3 = 32'd9;
    end else if (sext_ln1198_fu_578_p1[10] == 1'b1) begin
        l_1_fu_582_p3 = 32'd10;
    end else if (sext_ln1198_fu_578_p1[11] == 1'b1) begin
        l_1_fu_582_p3 = 32'd11;
    end else if (sext_ln1198_fu_578_p1[12] == 1'b1) begin
        l_1_fu_582_p3 = 32'd12;
    end else if (sext_ln1198_fu_578_p1[13] == 1'b1) begin
        l_1_fu_582_p3 = 32'd13;
    end else if (sext_ln1198_fu_578_p1[14] == 1'b1) begin
        l_1_fu_582_p3 = 32'd14;
    end else if (sext_ln1198_fu_578_p1[15] == 1'b1) begin
        l_1_fu_582_p3 = 32'd15;
    end else if (sext_ln1198_fu_578_p1[16] == 1'b1) begin
        l_1_fu_582_p3 = 32'd16;
    end else if (sext_ln1198_fu_578_p1[17] == 1'b1) begin
        l_1_fu_582_p3 = 32'd17;
    end else if (sext_ln1198_fu_578_p1[18] == 1'b1) begin
        l_1_fu_582_p3 = 32'd18;
    end else if (sext_ln1198_fu_578_p1[19] == 1'b1) begin
        l_1_fu_582_p3 = 32'd19;
    end else if (sext_ln1198_fu_578_p1[20] == 1'b1) begin
        l_1_fu_582_p3 = 32'd20;
    end else if (sext_ln1198_fu_578_p1[21] == 1'b1) begin
        l_1_fu_582_p3 = 32'd21;
    end else if (sext_ln1198_fu_578_p1[22] == 1'b1) begin
        l_1_fu_582_p3 = 32'd22;
    end else if (sext_ln1198_fu_578_p1[23] == 1'b1) begin
        l_1_fu_582_p3 = 32'd23;
    end else if (sext_ln1198_fu_578_p1[24] == 1'b1) begin
        l_1_fu_582_p3 = 32'd24;
    end else if (sext_ln1198_fu_578_p1[25] == 1'b1) begin
        l_1_fu_582_p3 = 32'd25;
    end else if (sext_ln1198_fu_578_p1[26] == 1'b1) begin
        l_1_fu_582_p3 = 32'd26;
    end else if (sext_ln1198_fu_578_p1[27] == 1'b1) begin
        l_1_fu_582_p3 = 32'd27;
    end else if (sext_ln1198_fu_578_p1[28] == 1'b1) begin
        l_1_fu_582_p3 = 32'd28;
    end else if (sext_ln1198_fu_578_p1[29] == 1'b1) begin
        l_1_fu_582_p3 = 32'd29;
    end else if (sext_ln1198_fu_578_p1[30] == 1'b1) begin
        l_1_fu_582_p3 = 32'd30;
    end else if (sext_ln1198_fu_578_p1[31] == 1'b1) begin
        l_1_fu_582_p3 = 32'd31;
    end else begin
        l_1_fu_582_p3 = 32'd32;
    end
end

assign l_fu_539_p1 = tmp_4_fu_531_p3[31:0];

assign lsb_index_1_fu_736_p2 = ($signed(sub_ln1099_1_reg_1205) + $signed(32'd4294967272));

assign lsb_index_fu_636_p2 = ($signed(sub_ln1099_reg_1183) + $signed(32'd4294967272));

assign lshr_ln1102_1_fu_614_p2 = 21'd2097151 >> zext_ln1102_1_fu_610_p1;

assign lshr_ln1102_fu_666_p2 = 40'd1099511627775 >> zext_ln1102_fu_662_p1;

assign lshr_ln1109_fu_823_p2 = zext_ln1092_reg_1175 >> zext_ln1109_fu_819_p1;

assign lshr_ln1113_fu_892_p2 = zext_ln1112_fu_880_p1 >> zext_ln1113_fu_888_p1;

assign m_1_fu_856_p2 = (zext_ln1106_fu_849_p1 + zext_ln1116_fu_853_p1);

assign m_4_fu_913_p3 = ((icmp_ln1113_reg_1242[0:0] == 1'b1) ? lshr_ln1113_fu_892_p2 : shl_ln1114_fu_907_p2);

assign m_5_fu_923_p2 = (m_4_fu_913_p3 + zext_ln1116_1_fu_920_p1);

assign m_axi_bundle5_ARADDR = 64'd0;

assign m_axi_bundle5_ARBURST = 2'd0;

assign m_axi_bundle5_ARCACHE = 4'd0;

assign m_axi_bundle5_ARID = 1'd0;

assign m_axi_bundle5_ARLEN = 32'd0;

assign m_axi_bundle5_ARLOCK = 2'd0;

assign m_axi_bundle5_ARPROT = 3'd0;

assign m_axi_bundle5_ARQOS = 4'd0;

assign m_axi_bundle5_ARREGION = 4'd0;

assign m_axi_bundle5_ARSIZE = 3'd0;

assign m_axi_bundle5_ARUSER = 1'd0;

assign m_axi_bundle5_ARVALID = 1'b0;

assign m_axi_bundle5_AWADDR = sext_ln115_fu_1008_p1;

assign m_axi_bundle5_AWBURST = 2'd0;

assign m_axi_bundle5_AWCACHE = 4'd0;

assign m_axi_bundle5_AWID = 1'd0;

assign m_axi_bundle5_AWLEN = 32'd1;

assign m_axi_bundle5_AWLOCK = 2'd0;

assign m_axi_bundle5_AWPROT = 3'd0;

assign m_axi_bundle5_AWQOS = 4'd0;

assign m_axi_bundle5_AWREGION = 4'd0;

assign m_axi_bundle5_AWSIZE = 3'd0;

assign m_axi_bundle5_AWUSER = 1'd0;

assign m_axi_bundle5_RREADY = 1'b0;

assign m_axi_bundle5_WDATA = select_ln1090_reg_1267;

assign m_axi_bundle5_WID = 1'd0;

assign m_axi_bundle5_WLAST = 1'b0;

assign m_axi_bundle5_WSTRB = 4'd15;

assign m_axi_bundle5_WUSER = 1'd0;

assign m_axi_bundle6_ARADDR = 64'd0;

assign m_axi_bundle6_ARBURST = 2'd0;

assign m_axi_bundle6_ARCACHE = 4'd0;

assign m_axi_bundle6_ARID = 1'd0;

assign m_axi_bundle6_ARLEN = 32'd0;

assign m_axi_bundle6_ARLOCK = 2'd0;

assign m_axi_bundle6_ARPROT = 3'd0;

assign m_axi_bundle6_ARQOS = 4'd0;

assign m_axi_bundle6_ARREGION = 4'd0;

assign m_axi_bundle6_ARSIZE = 3'd0;

assign m_axi_bundle6_ARUSER = 1'd0;

assign m_axi_bundle6_ARVALID = 1'b0;

assign m_axi_bundle6_AWADDR = sext_ln116_fu_1080_p1;

assign m_axi_bundle6_AWBURST = 2'd0;

assign m_axi_bundle6_AWCACHE = 4'd0;

assign m_axi_bundle6_AWID = 1'd0;

assign m_axi_bundle6_AWLEN = 32'd1;

assign m_axi_bundle6_AWLOCK = 2'd0;

assign m_axi_bundle6_AWPROT = 3'd0;

assign m_axi_bundle6_AWQOS = 4'd0;

assign m_axi_bundle6_AWREGION = 4'd0;

assign m_axi_bundle6_AWSIZE = 3'd0;

assign m_axi_bundle6_AWUSER = 1'd0;

assign m_axi_bundle6_RREADY = 1'b0;

assign m_axi_bundle6_WDATA = select_ln1090_1_reg_1278;

assign m_axi_bundle6_WID = 1'd0;

assign m_axi_bundle6_WLAST = 1'b0;

assign m_axi_bundle6_WSTRB = 4'd15;

assign m_axi_bundle6_WUSER = 1'd0;

assign m_fu_842_p3 = ((icmp_ln1109_reg_1232[0:0] == 1'b1) ? lshr_ln1109_fu_823_p2 : shl_ln1110_fu_837_p2);

assign or_ln1104_1_fu_800_p3 = {{1'd0}, {or_ln1104_fu_794_p2}};

assign or_ln1104_2_fu_716_p2 = (and_ln1104_fu_710_p2 | a_fu_683_p2);

assign or_ln1104_fu_794_p2 = (and_ln1104_1_fu_788_p2 | a_1_fu_757_p2);

assign or_ln69_fu_332_p2 = (and_ln69_1_fu_326_p2 | and_ln63_fu_262_p2);

assign or_ln_fu_722_p3 = {{1'd0}, {or_ln1104_2_fu_716_p2}};

assign p_Result_10_fu_620_p2 = (zext_ln1092_1_fu_557_p1 & lshr_ln1102_1_fu_614_p2);

assign p_Result_11_fu_781_p3 = zext_ln1092_1_reg_1200[add_ln1104_fu_776_p2];

assign p_Result_15_fu_519_p3 = {{1'd1}, {p_Result_s_fu_509_p4}};

assign p_Result_16_fu_975_p5 = {{zext_ln1106_1_fu_947_p1[63:32]}, {tmp_3_fu_968_p3}, {zext_ln1106_1_fu_947_p1[22:0]}};

assign p_Result_17_fu_472_p3 = ret_V_fu_454_p2[32'd20];

assign p_Result_18_fu_570_p3 = {{1'd1}, {p_Result_8_fu_560_p4}};

assign p_Result_19_fu_1047_p5 = {{zext_ln1117_fu_1019_p1[63:32]}, {tmp_6_fu_1040_p3}, {zext_ln1117_fu_1019_p1[22:0]}};

assign p_Result_3_fu_703_p3 = zext_ln1092_reg_1175[lsb_index_fu_636_p2];

assign p_Result_4_fu_672_p2 = (zext_ln1092_reg_1175 & lshr_ln1102_fu_666_p2);

integer ap_tvar_int_0;

always @ (zext_ln1092_1_fu_557_p1) begin
    for (ap_tvar_int_0 = 21 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 20 - 0) begin
            p_Result_8_fu_560_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_8_fu_560_p4[ap_tvar_int_0] = zext_ln1092_1_fu_557_p1[20 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (zext_ln1092_fu_505_p1) begin
    for (ap_tvar_int_1 = 40 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 39 - 0) begin
            p_Result_s_fu_509_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_509_p4[ap_tvar_int_1] = zext_ln1092_fu_505_p1[39 - ap_tvar_int_1];
        end
    end
end

assign ret_V_fu_454_p2 = ($signed(sext_ln813_fu_442_p1) + $signed(sext_ln813_1_fu_446_p1));

assign select_ln1090_1_fu_1063_p3 = ((icmp_ln1090_1_reg_1159[0:0] == 1'b1) ? 32'd0 : LD_1_fu_1059_p1);

assign select_ln1090_fu_991_p3 = ((icmp_ln1090_reg_1148[0:0] == 1'b1) ? 32'd0 : LD_fu_987_p1);

assign select_ln1098_1_fu_1022_p3 = ((p_Result_12_reg_1262[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln1098_fu_950_p3 = ((p_Result_5_reg_1252[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln63_fu_338_p3 = ((and_ln63_fu_262_p2[0:0] == 1'b1) ? sub_ln64_fu_268_p2 : empty_55_fu_244_p1);

assign select_ln69_2_fu_346_p3 = ((and_ln69_1_fu_326_p2[0:0] == 1'b1) ? sub_ln64_fu_268_p2 : select_ln63_fu_338_p3);

assign select_ln69_3_fu_363_p3 = ((and_ln69_1_fu_326_p2[0:0] == 1'b1) ? sub_ln71_fu_296_p2 : empty_fu_240_p1);

assign select_ln69_4_fu_371_p3 = ((and_ln76_fu_308_p2[0:0] == 1'b1) ? sub_ln71_fu_296_p2 : empty_fu_240_p1);

assign select_ln69_5_fu_379_p3 = ((or_ln69_fu_332_p2[0:0] == 1'b1) ? select_ln69_3_fu_363_p3 : select_ln69_4_fu_371_p3);

assign select_ln69_fu_410_p3 = ((and_ln69_1_reg_1117[0:0] == 1'b1) ? 12'd3292 : 12'd3694);

assign select_ln76_fu_403_p3 = ((and_ln76_reg_1112[0:0] == 1'b1) ? 12'd2890 : 12'd0);

assign sext_ln115_fu_1008_p1 = $signed(trunc_ln5_fu_998_p4);

assign sext_ln116_fu_1080_p1 = $signed(trunc_ln7_fu_1070_p4);

assign sext_ln1198_fu_578_p1 = $signed(p_Result_18_fu_570_p3);

assign sext_ln1204_fu_527_p1 = $signed(p_Result_15_fu_519_p3);

assign sext_ln1347_fu_450_p1 = theta_rotated_V_fu_417_p3;

assign sext_ln813_1_fu_446_p1 = theta_rotated_V_fu_417_p3;

assign sext_ln813_fu_442_p0 = grp_cordic_Pipeline_VITIS_LOOP_93_1_fu_230_lhs_out;

assign sext_ln813_fu_442_p1 = sext_ln813_fu_442_p0;

assign shl_ln1110_fu_837_p2 = zext_ln1092_reg_1175 << zext_ln1110_fu_833_p1;

assign shl_ln1114_fu_907_p2 = zext_ln1112_fu_880_p1 << zext_ln1114_fu_903_p1;

assign sub_ln1099_1_fu_590_p2 = (32'd21 - l_1_fu_582_p3);

assign sub_ln1099_fu_543_p2 = (32'd40 - l_fu_539_p1);

assign sub_ln1102_1_fu_604_p2 = (5'd14 - trunc_ln1102_1_fu_600_p1);

assign sub_ln1102_fu_657_p2 = (6'd1 - trunc_ln1102_reg_1190);

assign sub_ln1110_fu_828_p2 = (32'd25 - sub_ln1099_reg_1183);

assign sub_ln1114_fu_898_p2 = (32'd25 - sub_ln1099_1_reg_1205);

assign sub_ln1119_1_fu_1029_p2 = (8'd13 - trunc_ln1098_1_reg_1222);

assign sub_ln1119_fu_957_p2 = (8'd24 - trunc_ln1098_reg_1195);

assign sub_ln64_fu_268_p2 = (12'd0 - empty_55_fu_244_p1);

assign sub_ln71_fu_296_p2 = (12'd0 - empty_fu_240_p1);

assign theta_rotated_V_fu_417_p3 = ((or_ln69_reg_1122[0:0] == 1'b1) ? select_ln69_fu_410_p3 : select_ln76_fu_403_p3);

assign tmp_11_fu_741_p4 = {{lsb_index_1_fu_736_p2[31:1]}};

assign tmp_12_fu_762_p3 = lsb_index_1_fu_736_p2[32'd31];

assign tmp_1_fu_274_p3 = sin[32'd16];

assign tmp_2_fu_288_p3 = and_ln69_fu_282_p2[32'd16];

assign tmp_3_fu_968_p3 = {{p_Result_14_reg_1153}, {add_ln1124_fu_962_p2}};


always @ (sext_ln1204_fu_527_p1) begin
    if (sext_ln1204_fu_527_p1[0] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd0;
    end else if (sext_ln1204_fu_527_p1[1] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd1;
    end else if (sext_ln1204_fu_527_p1[2] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd2;
    end else if (sext_ln1204_fu_527_p1[3] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd3;
    end else if (sext_ln1204_fu_527_p1[4] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd4;
    end else if (sext_ln1204_fu_527_p1[5] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd5;
    end else if (sext_ln1204_fu_527_p1[6] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd6;
    end else if (sext_ln1204_fu_527_p1[7] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd7;
    end else if (sext_ln1204_fu_527_p1[8] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd8;
    end else if (sext_ln1204_fu_527_p1[9] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd9;
    end else if (sext_ln1204_fu_527_p1[10] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd10;
    end else if (sext_ln1204_fu_527_p1[11] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd11;
    end else if (sext_ln1204_fu_527_p1[12] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd12;
    end else if (sext_ln1204_fu_527_p1[13] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd13;
    end else if (sext_ln1204_fu_527_p1[14] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd14;
    end else if (sext_ln1204_fu_527_p1[15] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd15;
    end else if (sext_ln1204_fu_527_p1[16] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd16;
    end else if (sext_ln1204_fu_527_p1[17] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd17;
    end else if (sext_ln1204_fu_527_p1[18] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd18;
    end else if (sext_ln1204_fu_527_p1[19] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd19;
    end else if (sext_ln1204_fu_527_p1[20] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd20;
    end else if (sext_ln1204_fu_527_p1[21] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd21;
    end else if (sext_ln1204_fu_527_p1[22] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd22;
    end else if (sext_ln1204_fu_527_p1[23] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd23;
    end else if (sext_ln1204_fu_527_p1[24] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd24;
    end else if (sext_ln1204_fu_527_p1[25] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd25;
    end else if (sext_ln1204_fu_527_p1[26] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd26;
    end else if (sext_ln1204_fu_527_p1[27] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd27;
    end else if (sext_ln1204_fu_527_p1[28] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd28;
    end else if (sext_ln1204_fu_527_p1[29] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd29;
    end else if (sext_ln1204_fu_527_p1[30] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd30;
    end else if (sext_ln1204_fu_527_p1[31] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd31;
    end else if (sext_ln1204_fu_527_p1[32] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd32;
    end else if (sext_ln1204_fu_527_p1[33] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd33;
    end else if (sext_ln1204_fu_527_p1[34] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd34;
    end else if (sext_ln1204_fu_527_p1[35] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd35;
    end else if (sext_ln1204_fu_527_p1[36] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd36;
    end else if (sext_ln1204_fu_527_p1[37] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd37;
    end else if (sext_ln1204_fu_527_p1[38] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd38;
    end else if (sext_ln1204_fu_527_p1[39] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd39;
    end else if (sext_ln1204_fu_527_p1[40] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd40;
    end else if (sext_ln1204_fu_527_p1[41] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd41;
    end else if (sext_ln1204_fu_527_p1[42] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd42;
    end else if (sext_ln1204_fu_527_p1[43] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd43;
    end else if (sext_ln1204_fu_527_p1[44] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd44;
    end else if (sext_ln1204_fu_527_p1[45] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd45;
    end else if (sext_ln1204_fu_527_p1[46] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd46;
    end else if (sext_ln1204_fu_527_p1[47] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd47;
    end else if (sext_ln1204_fu_527_p1[48] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd48;
    end else if (sext_ln1204_fu_527_p1[49] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd49;
    end else if (sext_ln1204_fu_527_p1[50] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd50;
    end else if (sext_ln1204_fu_527_p1[51] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd51;
    end else if (sext_ln1204_fu_527_p1[52] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd52;
    end else if (sext_ln1204_fu_527_p1[53] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd53;
    end else if (sext_ln1204_fu_527_p1[54] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd54;
    end else if (sext_ln1204_fu_527_p1[55] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd55;
    end else if (sext_ln1204_fu_527_p1[56] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd56;
    end else if (sext_ln1204_fu_527_p1[57] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd57;
    end else if (sext_ln1204_fu_527_p1[58] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd58;
    end else if (sext_ln1204_fu_527_p1[59] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd59;
    end else if (sext_ln1204_fu_527_p1[60] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd60;
    end else if (sext_ln1204_fu_527_p1[61] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd61;
    end else if (sext_ln1204_fu_527_p1[62] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd62;
    end else if (sext_ln1204_fu_527_p1[63] == 1'b1) begin
        tmp_4_fu_531_p3 = 64'd63;
    end else begin
        tmp_4_fu_531_p3 = 64'd64;
    end
end

assign tmp_6_fu_1040_p3 = {{p_Result_17_reg_1164}, {add_ln1124_1_fu_1034_p2}};

assign tmp_7_fu_641_p4 = {{lsb_index_fu_636_p2[31:1]}};

assign tmp_8_fu_689_p3 = lsb_index_fu_636_p2[32'd31];

assign tmp_V_2_fu_480_p2 = (20'd0 - add_ln1347_1_fu_460_p2);

assign tmp_V_4_fu_499_p3 = ((p_Result_14_reg_1153[0:0] == 1'b1) ? tmp_V_fu_494_p2 : trunc_ln1270_reg_1142);

assign tmp_V_5_fu_486_p3 = ((p_Result_17_fu_472_p3[0:0] == 1'b1) ? tmp_V_2_fu_480_p2 : add_ln1347_1_fu_460_p2);

assign tmp_V_fu_494_p2 = (27'd0 - trunc_ln1270_reg_1142);

assign tmp_fu_248_p3 = cos[32'd16];

assign trunc_ln1098_1_fu_632_p1 = l_1_fu_582_p3[7:0];

assign trunc_ln1098_fu_553_p1 = tmp_4_fu_531_p3[7:0];

assign trunc_ln1099_fu_596_p1 = sub_ln1099_1_fu_590_p2[20:0];

assign trunc_ln1102_1_fu_600_p1 = sub_ln1099_1_fu_590_p2[4:0];

assign trunc_ln1102_fu_549_p1 = sub_ln1099_fu_543_p2[5:0];

assign trunc_ln1270_fu_427_p1 = grp_fu_1091_p2[26:0];

assign trunc_ln5_fu_998_p4 = {{mag[63:2]}};

assign trunc_ln7_fu_1070_p4 = {{theta[63:2]}};

assign xor_ln1104_1_fu_770_p2 = (tmp_12_fu_762_p3 ^ 1'd1);

assign xor_ln1104_fu_697_p2 = (tmp_8_fu_689_p3 ^ 1'd1);

assign xor_ln63_fu_320_p2 = (1'd1 ^ and_ln63_1_fu_314_p2);

assign zext_ln1092_1_fu_557_p1 = tmp_V_5_reg_1169;

assign zext_ln1092_fu_505_p1 = tmp_V_4_fu_499_p3;

assign zext_ln1102_1_fu_610_p1 = sub_ln1102_1_fu_604_p2;

assign zext_ln1102_fu_662_p1 = sub_ln1102_fu_657_p2;

assign zext_ln1106_1_fu_947_p1 = m_9_reg_1247;

assign zext_ln1106_fu_849_p1 = m_fu_842_p3;

assign zext_ln1109_fu_819_p1 = add_ln1109_fu_814_p2;

assign zext_ln1110_fu_833_p1 = sub_ln1110_fu_828_p2;

assign zext_ln1112_fu_880_p1 = tmp_V_5_reg_1169;

assign zext_ln1113_fu_888_p1 = add_ln1113_fu_883_p2;

assign zext_ln1114_fu_903_p1 = sub_ln1114_fu_898_p2;

assign zext_ln1116_1_fu_920_p1 = or_ln1104_1_reg_1237;

assign zext_ln1116_fu_853_p1 = or_ln_reg_1227;

assign zext_ln1117_fu_1019_p1 = m_8_reg_1257;

always @ (posedge ap_clk) begin
    current_cos_V_reg_1127[7:0] <= 8'b00000000;
    current_sin_V_reg_1132[7:0] <= 8'b00000000;
    zext_ln1092_reg_1175[39:27] <= 13'b0000000000000;
    zext_ln1092_1_reg_1200[20] <= 1'b0;
    or_ln_reg_1227[1] <= 1'b0;
    or_ln1104_1_reg_1237[1] <= 1'b0;
end

endmodule //top_fpga417_cordic
