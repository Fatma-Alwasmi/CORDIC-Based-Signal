// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_fpga417_top_complex_fir_Pipeline_VITIS_LOOP_137_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_bundle1_AWVALID,
        m_axi_bundle1_AWREADY,
        m_axi_bundle1_AWADDR,
        m_axi_bundle1_AWID,
        m_axi_bundle1_AWLEN,
        m_axi_bundle1_AWSIZE,
        m_axi_bundle1_AWBURST,
        m_axi_bundle1_AWLOCK,
        m_axi_bundle1_AWCACHE,
        m_axi_bundle1_AWPROT,
        m_axi_bundle1_AWQOS,
        m_axi_bundle1_AWREGION,
        m_axi_bundle1_AWUSER,
        m_axi_bundle1_WVALID,
        m_axi_bundle1_WREADY,
        m_axi_bundle1_WDATA,
        m_axi_bundle1_WSTRB,
        m_axi_bundle1_WLAST,
        m_axi_bundle1_WID,
        m_axi_bundle1_WUSER,
        m_axi_bundle1_ARVALID,
        m_axi_bundle1_ARREADY,
        m_axi_bundle1_ARADDR,
        m_axi_bundle1_ARID,
        m_axi_bundle1_ARLEN,
        m_axi_bundle1_ARSIZE,
        m_axi_bundle1_ARBURST,
        m_axi_bundle1_ARLOCK,
        m_axi_bundle1_ARCACHE,
        m_axi_bundle1_ARPROT,
        m_axi_bundle1_ARQOS,
        m_axi_bundle1_ARREGION,
        m_axi_bundle1_ARUSER,
        m_axi_bundle1_RVALID,
        m_axi_bundle1_RREADY,
        m_axi_bundle1_RDATA,
        m_axi_bundle1_RLAST,
        m_axi_bundle1_RID,
        m_axi_bundle1_RFIFONUM,
        m_axi_bundle1_RUSER,
        m_axi_bundle1_RRESP,
        m_axi_bundle1_BVALID,
        m_axi_bundle1_BREADY,
        m_axi_bundle1_BRESP,
        m_axi_bundle1_BID,
        m_axi_bundle1_BUSER,
        m_axi_bundle2_AWVALID,
        m_axi_bundle2_AWREADY,
        m_axi_bundle2_AWADDR,
        m_axi_bundle2_AWID,
        m_axi_bundle2_AWLEN,
        m_axi_bundle2_AWSIZE,
        m_axi_bundle2_AWBURST,
        m_axi_bundle2_AWLOCK,
        m_axi_bundle2_AWCACHE,
        m_axi_bundle2_AWPROT,
        m_axi_bundle2_AWQOS,
        m_axi_bundle2_AWREGION,
        m_axi_bundle2_AWUSER,
        m_axi_bundle2_WVALID,
        m_axi_bundle2_WREADY,
        m_axi_bundle2_WDATA,
        m_axi_bundle2_WSTRB,
        m_axi_bundle2_WLAST,
        m_axi_bundle2_WID,
        m_axi_bundle2_WUSER,
        m_axi_bundle2_ARVALID,
        m_axi_bundle2_ARREADY,
        m_axi_bundle2_ARADDR,
        m_axi_bundle2_ARID,
        m_axi_bundle2_ARLEN,
        m_axi_bundle2_ARSIZE,
        m_axi_bundle2_ARBURST,
        m_axi_bundle2_ARLOCK,
        m_axi_bundle2_ARCACHE,
        m_axi_bundle2_ARPROT,
        m_axi_bundle2_ARQOS,
        m_axi_bundle2_ARREGION,
        m_axi_bundle2_ARUSER,
        m_axi_bundle2_RVALID,
        m_axi_bundle2_RREADY,
        m_axi_bundle2_RDATA,
        m_axi_bundle2_RLAST,
        m_axi_bundle2_RID,
        m_axi_bundle2_RFIFONUM,
        m_axi_bundle2_RUSER,
        m_axi_bundle2_RRESP,
        m_axi_bundle2_BVALID,
        m_axi_bundle2_BREADY,
        m_axi_bundle2_BRESP,
        m_axi_bundle2_BID,
        m_axi_bundle2_BUSER,
        img_stream2_din,
        img_stream2_num_data_valid,
        img_stream2_fifo_cap,
        img_stream2_full_n,
        img_stream2_write,
        real_stream3_din,
        real_stream3_num_data_valid,
        real_stream3_fifo_cap,
        real_stream3_full_n,
        real_stream3_write,
        sext_ln137_1,
        sext_ln137,
        input_length,
        kernel_real_temp_V_23_reload,
        kernel_real_temp_V_22_reload,
        kernel_real_temp_V_21_reload,
        kernel_real_temp_V_20_reload,
        kernel_real_temp_V_19_reload,
        kernel_real_temp_V_18_reload,
        kernel_real_temp_V_17_reload,
        kernel_real_temp_V_16_reload,
        kernel_real_temp_V_15_reload,
        kernel_real_temp_V_14_reload,
        kernel_real_temp_V_13_reload,
        kernel_real_temp_V_12_reload,
        kernel_real_temp_V_11_reload,
        kernel_real_temp_V_10_reload,
        kernel_real_temp_V_9_reload,
        kernel_real_temp_V_8_reload,
        kernel_real_temp_V_7_reload,
        kernel_real_temp_V_6_reload,
        kernel_real_temp_V_5_reload,
        kernel_real_temp_V_4_reload,
        kernel_real_temp_V_3_reload,
        kernel_real_temp_V_2_reload,
        kernel_real_temp_V_1_reload,
        kernel_real_temp_V_reload,
        kernel_real_temp_V_24_reload,
        kernel_img_temp_V_23_reload,
        kernel_img_temp_V_22_reload,
        kernel_img_temp_V_21_reload,
        kernel_img_temp_V_20_reload,
        kernel_img_temp_V_19_reload,
        kernel_img_temp_V_18_reload,
        kernel_img_temp_V_17_reload,
        kernel_img_temp_V_16_reload,
        kernel_img_temp_V_15_reload,
        kernel_img_temp_V_14_reload,
        kernel_img_temp_V_13_reload,
        kernel_img_temp_V_12_reload,
        kernel_img_temp_V_11_reload,
        kernel_img_temp_V_10_reload,
        kernel_img_temp_V_9_reload,
        kernel_img_temp_V_8_reload,
        kernel_img_temp_V_7_reload,
        kernel_img_temp_V_6_reload,
        kernel_img_temp_V_5_reload,
        kernel_img_temp_V_4_reload,
        kernel_img_temp_V_3_reload,
        kernel_img_temp_V_2_reload,
        kernel_img_temp_V_1_reload,
        kernel_img_temp_V_reload,
        kernel_img_temp_V_24_reload
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_bundle1_AWVALID;
input   m_axi_bundle1_AWREADY;
output  [63:0] m_axi_bundle1_AWADDR;
output  [0:0] m_axi_bundle1_AWID;
output  [31:0] m_axi_bundle1_AWLEN;
output  [2:0] m_axi_bundle1_AWSIZE;
output  [1:0] m_axi_bundle1_AWBURST;
output  [1:0] m_axi_bundle1_AWLOCK;
output  [3:0] m_axi_bundle1_AWCACHE;
output  [2:0] m_axi_bundle1_AWPROT;
output  [3:0] m_axi_bundle1_AWQOS;
output  [3:0] m_axi_bundle1_AWREGION;
output  [0:0] m_axi_bundle1_AWUSER;
output   m_axi_bundle1_WVALID;
input   m_axi_bundle1_WREADY;
output  [31:0] m_axi_bundle1_WDATA;
output  [3:0] m_axi_bundle1_WSTRB;
output   m_axi_bundle1_WLAST;
output  [0:0] m_axi_bundle1_WID;
output  [0:0] m_axi_bundle1_WUSER;
output   m_axi_bundle1_ARVALID;
input   m_axi_bundle1_ARREADY;
output  [63:0] m_axi_bundle1_ARADDR;
output  [0:0] m_axi_bundle1_ARID;
output  [31:0] m_axi_bundle1_ARLEN;
output  [2:0] m_axi_bundle1_ARSIZE;
output  [1:0] m_axi_bundle1_ARBURST;
output  [1:0] m_axi_bundle1_ARLOCK;
output  [3:0] m_axi_bundle1_ARCACHE;
output  [2:0] m_axi_bundle1_ARPROT;
output  [3:0] m_axi_bundle1_ARQOS;
output  [3:0] m_axi_bundle1_ARREGION;
output  [0:0] m_axi_bundle1_ARUSER;
input   m_axi_bundle1_RVALID;
output   m_axi_bundle1_RREADY;
input  [31:0] m_axi_bundle1_RDATA;
input   m_axi_bundle1_RLAST;
input  [0:0] m_axi_bundle1_RID;
input  [8:0] m_axi_bundle1_RFIFONUM;
input  [0:0] m_axi_bundle1_RUSER;
input  [1:0] m_axi_bundle1_RRESP;
input   m_axi_bundle1_BVALID;
output   m_axi_bundle1_BREADY;
input  [1:0] m_axi_bundle1_BRESP;
input  [0:0] m_axi_bundle1_BID;
input  [0:0] m_axi_bundle1_BUSER;
output   m_axi_bundle2_AWVALID;
input   m_axi_bundle2_AWREADY;
output  [63:0] m_axi_bundle2_AWADDR;
output  [0:0] m_axi_bundle2_AWID;
output  [31:0] m_axi_bundle2_AWLEN;
output  [2:0] m_axi_bundle2_AWSIZE;
output  [1:0] m_axi_bundle2_AWBURST;
output  [1:0] m_axi_bundle2_AWLOCK;
output  [3:0] m_axi_bundle2_AWCACHE;
output  [2:0] m_axi_bundle2_AWPROT;
output  [3:0] m_axi_bundle2_AWQOS;
output  [3:0] m_axi_bundle2_AWREGION;
output  [0:0] m_axi_bundle2_AWUSER;
output   m_axi_bundle2_WVALID;
input   m_axi_bundle2_WREADY;
output  [31:0] m_axi_bundle2_WDATA;
output  [3:0] m_axi_bundle2_WSTRB;
output   m_axi_bundle2_WLAST;
output  [0:0] m_axi_bundle2_WID;
output  [0:0] m_axi_bundle2_WUSER;
output   m_axi_bundle2_ARVALID;
input   m_axi_bundle2_ARREADY;
output  [63:0] m_axi_bundle2_ARADDR;
output  [0:0] m_axi_bundle2_ARID;
output  [31:0] m_axi_bundle2_ARLEN;
output  [2:0] m_axi_bundle2_ARSIZE;
output  [1:0] m_axi_bundle2_ARBURST;
output  [1:0] m_axi_bundle2_ARLOCK;
output  [3:0] m_axi_bundle2_ARCACHE;
output  [2:0] m_axi_bundle2_ARPROT;
output  [3:0] m_axi_bundle2_ARQOS;
output  [3:0] m_axi_bundle2_ARREGION;
output  [0:0] m_axi_bundle2_ARUSER;
input   m_axi_bundle2_RVALID;
output   m_axi_bundle2_RREADY;
input  [31:0] m_axi_bundle2_RDATA;
input   m_axi_bundle2_RLAST;
input  [0:0] m_axi_bundle2_RID;
input  [8:0] m_axi_bundle2_RFIFONUM;
input  [0:0] m_axi_bundle2_RUSER;
input  [1:0] m_axi_bundle2_RRESP;
input   m_axi_bundle2_BVALID;
output   m_axi_bundle2_BREADY;
input  [1:0] m_axi_bundle2_BRESP;
input  [0:0] m_axi_bundle2_BID;
input  [0:0] m_axi_bundle2_BUSER;
output  [31:0] img_stream2_din;
input  [1:0] img_stream2_num_data_valid;
input  [1:0] img_stream2_fifo_cap;
input   img_stream2_full_n;
output   img_stream2_write;
output  [31:0] real_stream3_din;
input  [1:0] real_stream3_num_data_valid;
input  [1:0] real_stream3_fifo_cap;
input   real_stream3_full_n;
output   real_stream3_write;
input  [61:0] sext_ln137_1;
input  [61:0] sext_ln137;
input  [31:0] input_length;
input  [16:0] kernel_real_temp_V_23_reload;
input  [16:0] kernel_real_temp_V_22_reload;
input  [16:0] kernel_real_temp_V_21_reload;
input  [16:0] kernel_real_temp_V_20_reload;
input  [16:0] kernel_real_temp_V_19_reload;
input  [16:0] kernel_real_temp_V_18_reload;
input  [16:0] kernel_real_temp_V_17_reload;
input  [16:0] kernel_real_temp_V_16_reload;
input  [16:0] kernel_real_temp_V_15_reload;
input  [16:0] kernel_real_temp_V_14_reload;
input  [16:0] kernel_real_temp_V_13_reload;
input  [16:0] kernel_real_temp_V_12_reload;
input  [16:0] kernel_real_temp_V_11_reload;
input  [16:0] kernel_real_temp_V_10_reload;
input  [16:0] kernel_real_temp_V_9_reload;
input  [16:0] kernel_real_temp_V_8_reload;
input  [16:0] kernel_real_temp_V_7_reload;
input  [16:0] kernel_real_temp_V_6_reload;
input  [16:0] kernel_real_temp_V_5_reload;
input  [16:0] kernel_real_temp_V_4_reload;
input  [16:0] kernel_real_temp_V_3_reload;
input  [16:0] kernel_real_temp_V_2_reload;
input  [16:0] kernel_real_temp_V_1_reload;
input  [16:0] kernel_real_temp_V_reload;
input  [16:0] kernel_real_temp_V_24_reload;
input  [16:0] kernel_img_temp_V_23_reload;
input  [16:0] kernel_img_temp_V_22_reload;
input  [16:0] kernel_img_temp_V_21_reload;
input  [16:0] kernel_img_temp_V_20_reload;
input  [16:0] kernel_img_temp_V_19_reload;
input  [16:0] kernel_img_temp_V_18_reload;
input  [16:0] kernel_img_temp_V_17_reload;
input  [16:0] kernel_img_temp_V_16_reload;
input  [16:0] kernel_img_temp_V_15_reload;
input  [16:0] kernel_img_temp_V_14_reload;
input  [16:0] kernel_img_temp_V_13_reload;
input  [16:0] kernel_img_temp_V_12_reload;
input  [16:0] kernel_img_temp_V_11_reload;
input  [16:0] kernel_img_temp_V_10_reload;
input  [16:0] kernel_img_temp_V_9_reload;
input  [16:0] kernel_img_temp_V_8_reload;
input  [16:0] kernel_img_temp_V_7_reload;
input  [16:0] kernel_img_temp_V_6_reload;
input  [16:0] kernel_img_temp_V_5_reload;
input  [16:0] kernel_img_temp_V_4_reload;
input  [16:0] kernel_img_temp_V_3_reload;
input  [16:0] kernel_img_temp_V_2_reload;
input  [16:0] kernel_img_temp_V_1_reload;
input  [16:0] kernel_img_temp_V_reload;
input  [16:0] kernel_img_temp_V_24_reload;

reg ap_idle;
reg m_axi_bundle1_RREADY;
reg m_axi_bundle2_RREADY;
reg img_stream2_write;
reg real_stream3_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln137_reg_2152;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
reg    ap_block_state56_pp0_stage0_iter55;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln137_fu_1064_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bundle2_blk_n_R;
wire    ap_block_pp0_stage0;
reg    bundle1_blk_n_R;
reg    img_stream2_blk_n;
reg    real_stream3_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln137_reg_2152_pp0_iter1_reg;
wire   [16:0] shift_reg_real_V_36_fu_1093_p1;
reg   [16:0] shift_reg_real_V_36_reg_2156;
wire   [16:0] shift_reg_img_V_36_fu_1097_p1;
reg   [16:0] shift_reg_img_V_36_reg_2162;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [16:0] grp_complex_fir_fu_700_ap_return_0;
wire   [16:0] grp_complex_fir_fu_700_ap_return_1;
reg    grp_complex_fir_fu_700_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call29;
reg    ap_block_state2_pp0_stage0_iter1_ignore_call29;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call29;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call29;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call29;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call29;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call29;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call29;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call29;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call29;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call29;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call29;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call29;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call29;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call29;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call29;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call29;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call29;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call29;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call29;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call29;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call29;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call29;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call29;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call29;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call29;
wire    ap_block_state27_pp0_stage0_iter26_ignore_call29;
wire    ap_block_state28_pp0_stage0_iter27_ignore_call29;
wire    ap_block_state29_pp0_stage0_iter28_ignore_call29;
wire    ap_block_state30_pp0_stage0_iter29_ignore_call29;
wire    ap_block_state31_pp0_stage0_iter30_ignore_call29;
wire    ap_block_state32_pp0_stage0_iter31_ignore_call29;
wire    ap_block_state33_pp0_stage0_iter32_ignore_call29;
wire    ap_block_state34_pp0_stage0_iter33_ignore_call29;
wire    ap_block_state35_pp0_stage0_iter34_ignore_call29;
wire    ap_block_state36_pp0_stage0_iter35_ignore_call29;
wire    ap_block_state37_pp0_stage0_iter36_ignore_call29;
wire    ap_block_state38_pp0_stage0_iter37_ignore_call29;
wire    ap_block_state39_pp0_stage0_iter38_ignore_call29;
wire    ap_block_state40_pp0_stage0_iter39_ignore_call29;
wire    ap_block_state41_pp0_stage0_iter40_ignore_call29;
wire    ap_block_state42_pp0_stage0_iter41_ignore_call29;
wire    ap_block_state43_pp0_stage0_iter42_ignore_call29;
wire    ap_block_state44_pp0_stage0_iter43_ignore_call29;
wire    ap_block_state45_pp0_stage0_iter44_ignore_call29;
wire    ap_block_state46_pp0_stage0_iter45_ignore_call29;
wire    ap_block_state47_pp0_stage0_iter46_ignore_call29;
wire    ap_block_state48_pp0_stage0_iter47_ignore_call29;
wire    ap_block_state49_pp0_stage0_iter48_ignore_call29;
wire    ap_block_state50_pp0_stage0_iter49_ignore_call29;
wire    ap_block_state51_pp0_stage0_iter50_ignore_call29;
wire    ap_block_state52_pp0_stage0_iter51_ignore_call29;
wire    ap_block_state53_pp0_stage0_iter52_ignore_call29;
wire    ap_block_state54_pp0_stage0_iter53_ignore_call29;
wire    ap_block_state55_pp0_stage0_iter54_ignore_call29;
reg    ap_block_state56_pp0_stage0_iter55_ignore_call29;
reg    ap_block_pp0_stage0_11001_ignoreCallOp278;
reg   [30:0] i_fu_162;
wire   [30:0] add_ln137_fu_1070_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_i_load;
reg   [16:0] shift_reg_real_V_22_fu_166;
reg   [16:0] shift_reg_real_V_20_fu_170;
reg   [16:0] shift_reg_real_V_18_fu_174;
reg   [16:0] shift_reg_real_V_16_fu_178;
reg   [16:0] shift_reg_real_V_14_fu_182;
reg   [16:0] shift_reg_real_V_12_fu_186;
reg   [16:0] shift_reg_real_V_10_fu_190;
reg   [16:0] shift_reg_real_V_8_fu_194;
reg   [16:0] shift_reg_real_V_6_fu_198;
reg   [16:0] shift_reg_real_V_4_fu_202;
reg   [16:0] shift_reg_real_V_2_fu_206;
reg   [16:0] shift_reg_real_V_fu_210;
reg   [16:0] shift_reg_img_V_22_fu_214;
reg   [16:0] shift_reg_img_V_20_fu_218;
reg   [16:0] shift_reg_img_V_18_fu_222;
reg   [16:0] shift_reg_img_V_16_fu_226;
reg   [16:0] shift_reg_img_V_14_fu_230;
reg   [16:0] shift_reg_img_V_12_fu_234;
reg   [16:0] shift_reg_img_V_10_fu_238;
reg   [16:0] shift_reg_img_V_8_fu_242;
reg   [16:0] shift_reg_img_V_6_fu_246;
reg   [16:0] shift_reg_img_V_4_fu_250;
reg   [16:0] shift_reg_img_V_2_fu_254;
reg   [16:0] shift_reg_img_V_fu_258;
reg   [16:0] shift_reg_real_V_23_fu_262;
reg   [16:0] shift_reg_real_V_21_fu_266;
reg   [16:0] shift_reg_real_V_19_fu_270;
reg   [16:0] shift_reg_real_V_17_fu_274;
reg   [16:0] shift_reg_real_V_15_fu_278;
reg   [16:0] shift_reg_real_V_13_fu_282;
reg   [16:0] shift_reg_real_V_11_fu_286;
reg   [16:0] shift_reg_real_V_9_fu_290;
reg   [16:0] shift_reg_real_V_7_fu_294;
reg   [16:0] shift_reg_real_V_5_fu_298;
reg   [16:0] shift_reg_real_V_3_fu_302;
reg   [16:0] shift_reg_real_V_1_fu_306;
reg   [16:0] shift_reg_img_V_23_fu_310;
reg   [16:0] shift_reg_img_V_21_fu_314;
reg   [16:0] shift_reg_img_V_19_fu_318;
reg   [16:0] shift_reg_img_V_17_fu_322;
reg   [16:0] shift_reg_img_V_15_fu_326;
reg   [16:0] shift_reg_img_V_13_fu_330;
reg   [16:0] shift_reg_img_V_11_fu_334;
reg   [16:0] shift_reg_img_V_9_fu_338;
reg   [16:0] shift_reg_img_V_7_fu_342;
reg   [16:0] shift_reg_img_V_5_fu_346;
reg   [16:0] shift_reg_img_V_3_fu_350;
reg   [16:0] shift_reg_img_V_1_fu_354;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] zext_ln137_fu_1060_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_fpga417_complex_fir grp_complex_fir_fu_700(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read(shift_reg_real_V_36_reg_2156),
    .p_read1(shift_reg_real_V_23_fu_262),
    .p_read2(shift_reg_real_V_22_fu_166),
    .p_read3(shift_reg_real_V_21_fu_266),
    .p_read4(shift_reg_real_V_20_fu_170),
    .p_read5(shift_reg_real_V_19_fu_270),
    .p_read6(shift_reg_real_V_18_fu_174),
    .p_read7(shift_reg_real_V_17_fu_274),
    .p_read8(shift_reg_real_V_16_fu_178),
    .p_read9(shift_reg_real_V_15_fu_278),
    .p_read10(shift_reg_real_V_14_fu_182),
    .p_read11(shift_reg_real_V_13_fu_282),
    .p_read12(shift_reg_real_V_12_fu_186),
    .p_read13(shift_reg_real_V_11_fu_286),
    .p_read14(shift_reg_real_V_10_fu_190),
    .p_read15(shift_reg_real_V_9_fu_290),
    .p_read16(shift_reg_real_V_8_fu_194),
    .p_read17(shift_reg_real_V_7_fu_294),
    .p_read18(shift_reg_real_V_6_fu_198),
    .p_read19(shift_reg_real_V_5_fu_298),
    .p_read20(shift_reg_real_V_4_fu_202),
    .p_read21(shift_reg_real_V_3_fu_302),
    .p_read22(shift_reg_real_V_2_fu_206),
    .p_read23(shift_reg_real_V_1_fu_306),
    .p_read24(shift_reg_real_V_fu_210),
    .p_read25(shift_reg_img_V_36_reg_2162),
    .p_read26(shift_reg_img_V_23_fu_310),
    .p_read27(shift_reg_img_V_22_fu_214),
    .p_read28(shift_reg_img_V_21_fu_314),
    .p_read29(shift_reg_img_V_20_fu_218),
    .p_read30(shift_reg_img_V_19_fu_318),
    .p_read31(shift_reg_img_V_18_fu_222),
    .p_read32(shift_reg_img_V_17_fu_322),
    .p_read33(shift_reg_img_V_16_fu_226),
    .p_read34(shift_reg_img_V_15_fu_326),
    .p_read35(shift_reg_img_V_14_fu_230),
    .p_read36(shift_reg_img_V_13_fu_330),
    .p_read37(shift_reg_img_V_12_fu_234),
    .p_read38(shift_reg_img_V_11_fu_334),
    .p_read39(shift_reg_img_V_10_fu_238),
    .p_read40(shift_reg_img_V_9_fu_338),
    .p_read41(shift_reg_img_V_8_fu_242),
    .p_read42(shift_reg_img_V_7_fu_342),
    .p_read43(shift_reg_img_V_6_fu_246),
    .p_read44(shift_reg_img_V_5_fu_346),
    .p_read45(shift_reg_img_V_4_fu_250),
    .p_read46(shift_reg_img_V_3_fu_350),
    .p_read47(shift_reg_img_V_2_fu_254),
    .p_read48(shift_reg_img_V_1_fu_354),
    .p_read49(shift_reg_img_V_fu_258),
    .p_read50(kernel_real_temp_V_23_reload),
    .p_read51(kernel_real_temp_V_22_reload),
    .p_read52(kernel_real_temp_V_21_reload),
    .p_read53(kernel_real_temp_V_20_reload),
    .p_read54(kernel_real_temp_V_19_reload),
    .p_read55(kernel_real_temp_V_18_reload),
    .p_read56(kernel_real_temp_V_17_reload),
    .p_read57(kernel_real_temp_V_16_reload),
    .p_read58(kernel_real_temp_V_15_reload),
    .p_read59(kernel_real_temp_V_14_reload),
    .p_read60(kernel_real_temp_V_13_reload),
    .p_read61(kernel_real_temp_V_12_reload),
    .p_read62(kernel_real_temp_V_11_reload),
    .p_read63(kernel_real_temp_V_10_reload),
    .p_read64(kernel_real_temp_V_9_reload),
    .p_read65(kernel_real_temp_V_8_reload),
    .p_read66(kernel_real_temp_V_7_reload),
    .p_read67(kernel_real_temp_V_6_reload),
    .p_read68(kernel_real_temp_V_5_reload),
    .p_read69(kernel_real_temp_V_4_reload),
    .p_read70(kernel_real_temp_V_3_reload),
    .p_read71(kernel_real_temp_V_2_reload),
    .p_read72(kernel_real_temp_V_1_reload),
    .p_read73(kernel_real_temp_V_reload),
    .p_read74(kernel_real_temp_V_24_reload),
    .p_read75(kernel_img_temp_V_23_reload),
    .p_read76(kernel_img_temp_V_22_reload),
    .p_read77(kernel_img_temp_V_21_reload),
    .p_read78(kernel_img_temp_V_20_reload),
    .p_read79(kernel_img_temp_V_19_reload),
    .p_read80(kernel_img_temp_V_18_reload),
    .p_read81(kernel_img_temp_V_17_reload),
    .p_read82(kernel_img_temp_V_16_reload),
    .p_read83(kernel_img_temp_V_15_reload),
    .p_read84(kernel_img_temp_V_14_reload),
    .p_read85(kernel_img_temp_V_13_reload),
    .p_read86(kernel_img_temp_V_12_reload),
    .p_read87(kernel_img_temp_V_11_reload),
    .p_read88(kernel_img_temp_V_10_reload),
    .p_read89(kernel_img_temp_V_9_reload),
    .p_read90(kernel_img_temp_V_8_reload),
    .p_read91(kernel_img_temp_V_7_reload),
    .p_read92(kernel_img_temp_V_6_reload),
    .p_read93(kernel_img_temp_V_5_reload),
    .p_read94(kernel_img_temp_V_4_reload),
    .p_read95(kernel_img_temp_V_3_reload),
    .p_read96(kernel_img_temp_V_2_reload),
    .p_read97(kernel_img_temp_V_1_reload),
    .p_read98(kernel_img_temp_V_reload),
    .p_read99(kernel_img_temp_V_24_reload),
    .ap_return_0(grp_complex_fir_fu_700_ap_return_0),
    .ap_return_1(grp_complex_fir_fu_700_ap_return_1),
    .ap_ce(grp_complex_fir_fu_700_ap_ce)
);

top_fpga417_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter54_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln137_fu_1064_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_162 <= add_ln137_fu_1070_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_162 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_10_fu_238 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_10_fu_238 <= shift_reg_img_V_11_fu_334;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_11_fu_334 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_11_fu_334 <= shift_reg_img_V_12_fu_234;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_12_fu_234 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_12_fu_234 <= shift_reg_img_V_13_fu_330;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_13_fu_330 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_13_fu_330 <= shift_reg_img_V_14_fu_230;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_14_fu_230 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_14_fu_230 <= shift_reg_img_V_15_fu_326;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_15_fu_326 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_15_fu_326 <= shift_reg_img_V_16_fu_226;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_16_fu_226 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_16_fu_226 <= shift_reg_img_V_17_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_17_fu_322 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_17_fu_322 <= shift_reg_img_V_18_fu_222;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_18_fu_222 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_18_fu_222 <= shift_reg_img_V_19_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_19_fu_318 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_19_fu_318 <= shift_reg_img_V_20_fu_218;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_1_fu_354 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_1_fu_354 <= shift_reg_img_V_2_fu_254;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_20_fu_218 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_20_fu_218 <= shift_reg_img_V_21_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_21_fu_314 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_21_fu_314 <= shift_reg_img_V_22_fu_214;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_22_fu_214 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_22_fu_214 <= shift_reg_img_V_23_fu_310;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_23_fu_310 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_23_fu_310 <= shift_reg_img_V_36_reg_2162;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_2_fu_254 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_2_fu_254 <= shift_reg_img_V_3_fu_350;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_3_fu_350 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_3_fu_350 <= shift_reg_img_V_4_fu_250;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_4_fu_250 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_4_fu_250 <= shift_reg_img_V_5_fu_346;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_5_fu_346 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_5_fu_346 <= shift_reg_img_V_6_fu_246;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_6_fu_246 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_6_fu_246 <= shift_reg_img_V_7_fu_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_7_fu_342 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_7_fu_342 <= shift_reg_img_V_8_fu_242;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_8_fu_242 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_8_fu_242 <= shift_reg_img_V_9_fu_338;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_9_fu_338 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_9_fu_338 <= shift_reg_img_V_10_fu_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_img_V_fu_258 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_img_V_fu_258 <= shift_reg_img_V_1_fu_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_10_fu_190 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_10_fu_190 <= shift_reg_real_V_11_fu_286;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_11_fu_286 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_11_fu_286 <= shift_reg_real_V_12_fu_186;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_12_fu_186 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_12_fu_186 <= shift_reg_real_V_13_fu_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_13_fu_282 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_13_fu_282 <= shift_reg_real_V_14_fu_182;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_14_fu_182 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_14_fu_182 <= shift_reg_real_V_15_fu_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_15_fu_278 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_15_fu_278 <= shift_reg_real_V_16_fu_178;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_16_fu_178 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_16_fu_178 <= shift_reg_real_V_17_fu_274;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_17_fu_274 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_17_fu_274 <= shift_reg_real_V_18_fu_174;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_18_fu_174 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_18_fu_174 <= shift_reg_real_V_19_fu_270;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_19_fu_270 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_19_fu_270 <= shift_reg_real_V_20_fu_170;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_1_fu_306 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_1_fu_306 <= shift_reg_real_V_2_fu_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_20_fu_170 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_20_fu_170 <= shift_reg_real_V_21_fu_266;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_21_fu_266 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_21_fu_266 <= shift_reg_real_V_22_fu_166;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_22_fu_166 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_22_fu_166 <= shift_reg_real_V_23_fu_262;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_23_fu_262 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_23_fu_262 <= shift_reg_real_V_36_reg_2156;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_2_fu_206 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_2_fu_206 <= shift_reg_real_V_3_fu_302;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_3_fu_302 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_3_fu_302 <= shift_reg_real_V_4_fu_202;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_4_fu_202 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_4_fu_202 <= shift_reg_real_V_5_fu_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_5_fu_298 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_5_fu_298 <= shift_reg_real_V_6_fu_198;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_6_fu_198 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_6_fu_198 <= shift_reg_real_V_7_fu_294;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_7_fu_294 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_7_fu_294 <= shift_reg_real_V_8_fu_194;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_8_fu_194 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_8_fu_194 <= shift_reg_real_V_9_fu_290;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_9_fu_290 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_9_fu_290 <= shift_reg_real_V_10_fu_190;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shift_reg_real_V_fu_210 <= 17'd0;
        end else if (((icmp_ln137_reg_2152_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shift_reg_real_V_fu_210 <= shift_reg_real_V_1_fu_306;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln137_reg_2152 <= icmp_ln137_fu_1064_p2;
        icmp_ln137_reg_2152_pp0_iter1_reg <= icmp_ln137_reg_2152;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_reg_2152 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shift_reg_img_V_36_reg_2162 <= shift_reg_img_V_36_fu_1097_p1;
        shift_reg_real_V_36_reg_2156 <= shift_reg_real_V_36_fu_1093_p1;
    end
end

always @ (*) begin
    if (((icmp_ln137_fu_1064_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln137_reg_2152_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter54_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 31'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln137_reg_2152 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bundle1_blk_n_R = m_axi_bundle1_RVALID;
    end else begin
        bundle1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln137_reg_2152 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bundle2_blk_n_R = m_axi_bundle2_RVALID;
    end else begin
        bundle2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp278) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_complex_fir_fu_700_ap_ce = 1'b1;
    end else begin
        grp_complex_fir_fu_700_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter55 == 1'b1))) begin
        img_stream2_blk_n = img_stream2_full_n;
    end else begin
        img_stream2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter55 == 1'b1))) begin
        img_stream2_write = 1'b1;
    end else begin
        img_stream2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_reg_2152 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_bundle1_RREADY = 1'b1;
    end else begin
        m_axi_bundle1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln137_reg_2152 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_bundle2_RREADY = 1'b1;
    end else begin
        m_axi_bundle2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter55 == 1'b1))) begin
        real_stream3_blk_n = real_stream3_full_n;
    end else begin
        real_stream3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter55 == 1'b1))) begin
        real_stream3_write = 1'b1;
    end else begin
        real_stream3_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln137_fu_1070_p2 = (ap_sig_allocacmp_i_load + 31'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter55 == 1'b1) & ((real_stream3_full_n == 1'b0) | (img_stream2_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_bundle2_RVALID == 1'b0) & (icmp_ln137_reg_2152 == 1'd1)) | ((icmp_ln137_reg_2152 == 1'd1) & (m_axi_bundle1_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter55 == 1'b1) & ((real_stream3_full_n == 1'b0) | (img_stream2_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_bundle2_RVALID == 1'b0) & (icmp_ln137_reg_2152 == 1'd1)) | ((icmp_ln137_reg_2152 == 1'd1) & (m_axi_bundle1_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp278 = (((ap_enable_reg_pp0_iter55 == 1'b1) & ((real_stream3_full_n == 1'b0) | (img_stream2_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_bundle2_RVALID == 1'b0) & (icmp_ln137_reg_2152 == 1'd1)) | ((icmp_ln137_reg_2152 == 1'd1) & (m_axi_bundle1_RVALID == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter55 == 1'b1) & ((real_stream3_full_n == 1'b0) | (img_stream2_full_n == 1'b0))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axi_bundle2_RVALID == 1'b0) & (icmp_ln137_reg_2152 == 1'd1)) | ((icmp_ln137_reg_2152 == 1'd1) & (m_axi_bundle1_RVALID == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28_ignore_call29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((m_axi_bundle2_RVALID == 1'b0) & (icmp_ln137_reg_2152 == 1'd1)) | ((icmp_ln137_reg_2152 == 1'd1) & (m_axi_bundle1_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_ignore_call29 = (((m_axi_bundle2_RVALID == 1'b0) & (icmp_ln137_reg_2152 == 1'd1)) | ((icmp_ln137_reg_2152 == 1'd1) & (m_axi_bundle1_RVALID == 1'b0)));
end

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54_ignore_call29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state56_pp0_stage0_iter55 = ((real_stream3_full_n == 1'b0) | (img_stream2_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state56_pp0_stage0_iter55_ignore_call29 = ((real_stream3_full_n == 1'b0) | (img_stream2_full_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call29 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln137_fu_1064_p2 = (($signed(zext_ln137_fu_1060_p1) < $signed(input_length)) ? 1'b1 : 1'b0);

assign img_stream2_din = $signed(grp_complex_fir_fu_700_ap_return_0);

assign m_axi_bundle1_ARADDR = 64'd0;

assign m_axi_bundle1_ARBURST = 2'd0;

assign m_axi_bundle1_ARCACHE = 4'd0;

assign m_axi_bundle1_ARID = 1'd0;

assign m_axi_bundle1_ARLEN = 32'd0;

assign m_axi_bundle1_ARLOCK = 2'd0;

assign m_axi_bundle1_ARPROT = 3'd0;

assign m_axi_bundle1_ARQOS = 4'd0;

assign m_axi_bundle1_ARREGION = 4'd0;

assign m_axi_bundle1_ARSIZE = 3'd0;

assign m_axi_bundle1_ARUSER = 1'd0;

assign m_axi_bundle1_ARVALID = 1'b0;

assign m_axi_bundle1_AWADDR = 64'd0;

assign m_axi_bundle1_AWBURST = 2'd0;

assign m_axi_bundle1_AWCACHE = 4'd0;

assign m_axi_bundle1_AWID = 1'd0;

assign m_axi_bundle1_AWLEN = 32'd0;

assign m_axi_bundle1_AWLOCK = 2'd0;

assign m_axi_bundle1_AWPROT = 3'd0;

assign m_axi_bundle1_AWQOS = 4'd0;

assign m_axi_bundle1_AWREGION = 4'd0;

assign m_axi_bundle1_AWSIZE = 3'd0;

assign m_axi_bundle1_AWUSER = 1'd0;

assign m_axi_bundle1_AWVALID = 1'b0;

assign m_axi_bundle1_BREADY = 1'b0;

assign m_axi_bundle1_WDATA = 32'd0;

assign m_axi_bundle1_WID = 1'd0;

assign m_axi_bundle1_WLAST = 1'b0;

assign m_axi_bundle1_WSTRB = 4'd0;

assign m_axi_bundle1_WUSER = 1'd0;

assign m_axi_bundle1_WVALID = 1'b0;

assign m_axi_bundle2_ARADDR = 64'd0;

assign m_axi_bundle2_ARBURST = 2'd0;

assign m_axi_bundle2_ARCACHE = 4'd0;

assign m_axi_bundle2_ARID = 1'd0;

assign m_axi_bundle2_ARLEN = 32'd0;

assign m_axi_bundle2_ARLOCK = 2'd0;

assign m_axi_bundle2_ARPROT = 3'd0;

assign m_axi_bundle2_ARQOS = 4'd0;

assign m_axi_bundle2_ARREGION = 4'd0;

assign m_axi_bundle2_ARSIZE = 3'd0;

assign m_axi_bundle2_ARUSER = 1'd0;

assign m_axi_bundle2_ARVALID = 1'b0;

assign m_axi_bundle2_AWADDR = 64'd0;

assign m_axi_bundle2_AWBURST = 2'd0;

assign m_axi_bundle2_AWCACHE = 4'd0;

assign m_axi_bundle2_AWID = 1'd0;

assign m_axi_bundle2_AWLEN = 32'd0;

assign m_axi_bundle2_AWLOCK = 2'd0;

assign m_axi_bundle2_AWPROT = 3'd0;

assign m_axi_bundle2_AWQOS = 4'd0;

assign m_axi_bundle2_AWREGION = 4'd0;

assign m_axi_bundle2_AWSIZE = 3'd0;

assign m_axi_bundle2_AWUSER = 1'd0;

assign m_axi_bundle2_AWVALID = 1'b0;

assign m_axi_bundle2_BREADY = 1'b0;

assign m_axi_bundle2_WDATA = 32'd0;

assign m_axi_bundle2_WID = 1'd0;

assign m_axi_bundle2_WLAST = 1'b0;

assign m_axi_bundle2_WSTRB = 4'd0;

assign m_axi_bundle2_WUSER = 1'd0;

assign m_axi_bundle2_WVALID = 1'b0;

assign real_stream3_din = $signed(grp_complex_fir_fu_700_ap_return_1);

assign shift_reg_img_V_36_fu_1097_p1 = m_axi_bundle2_RDATA[16:0];

assign shift_reg_real_V_36_fu_1093_p1 = m_axi_bundle1_RDATA[16:0];

assign zext_ln137_fu_1060_p1 = ap_sig_allocacmp_i_load;

endmodule //top_fpga417_top_complex_fir_Pipeline_VITIS_LOOP_137_2
